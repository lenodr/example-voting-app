pipeline {
    agent none
        stages {
        stage('build') {
            agent {
                docker {
                    image 'maven:3.8.4-jdk-8'
                    args '-v $HOME/.m2/root/.m2'
                }
            }
            when { 
                changeset "**/worker/**" 
            }
            steps {
                echo 'Compile worker app'
                dir('worker') {
                    sh 'mvn compile'
                }
                
            }
        }
        stage('test') {
            agent {
                docker {
                    image 'maven:3.8.4-jdk-8'
                    args '-v $HOME/.m2/root/.m2'
                }
            }
            when { 
                changeset "**/worker/**" 
            }
            steps {
                echo 'Running Unit Tests on Worker app'
                dir('worker') {
                    sh 'mvn clean test'
                }
            }
        }
        stage('package') {
            agent {
                docker {
                    image 'maven:3.8.4-jdk-8'
                    args '-v $HOME/.m2/root/.m2'
                }
            }
            when { 
                branch "master"
                changeset "**/worker/**" 
            }
            steps {
                echo 'Packaging worker app'
                dir('worker') {
                    sh 'mvn package -DskipTests'
                    archiveArtifacts artifacts: '**/target/*.jar', fingerprint: true
                }
            }
        }

        stage('docker-package') {
            when { 
                changeset "**/worker/**" 
            }
            steps {
                echo 'Packaging worker app with docker'
                script {
                    docker.withRegistry('https://index.docker.io/v1', 'docker-creds') {
                        def workerImage = docker.build("lenodar/worker:v${env.BUILD_ID}", "./worker")
                        workerImage.push()
                        workerImage.push("${env.BRANCH_NAME}")
                    }
                }
            }
        }
    }
    post {
        always {
            echo 'Pipline for worker is complete...'
        }
        failure {
            office365ConnectorSend webhookUrl: 'https://venturecorporate.webhook.office.com/webhookb2/07e4c0f5-3d39-4dce-99a6-a04e14e2de3a@0a34c976-4d3f-4f45-93c4-6f7932cf637d/IncomingWebhook/eaee1e4279dd40aeaca768a4a00bb86f/76a2818f-6409-4b87-b582-8b4a7d0a9826',
                message: 'The building process failed so hard I cant even tell you right now',
                status: 'Failed'
        }
        success {
            office365ConnectorSend webhookUrl: 'https://venturecorporate.webhook.office.com/webhookb2/07e4c0f5-3d39-4dce-99a6-a04e14e2de3a@0a34c976-4d3f-4f45-93c4-6f7932cf637d/IncomingWebhook/eaee1e4279dd40aeaca768a4a00bb86f/76a2818f-6409-4b87-b582-8b4a7d0a9826',
                message: 'OMG youre such a pro! The build was a complete success',
                status: 'Success'
        }
    }
}